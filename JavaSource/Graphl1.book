/** Adjacency list graph implementation */
class Graphl implements Graph {
  private GraphList[] vertex;            // The vertex list
  private int numEdge;                   // Number of edges
  private int[] Mark;                     // The mark array

  public Graphl() {}
  public Graphl(int n)                   // Constructor
    { Init(n); }

  public void Init(int n) {
    Mark = new int[n];
    vertex = new GraphList[n];
    for (int i=0; i<n; i++)
      vertex[i] = new GraphList();
    numEdge = 0;
  }

  public int n() { return Mark.length; } // # of vertices
  public int e() { return numEdge; }     // # of edges

  /** @return v's first neighbor */
  public int first(int v) {
    if (vertex[v].length() == 0)
      return Mark.length;   // No neighbor
    vertex[v].moveToStart();
    Edge it = vertex[v].getValue();
    return it.vertex();
  }

 /** @return v's next neighbor after w */
  public int next(int v, int w) {
    Edge it = null;
    if (isEdge(v, w)) {
      vertex[v].next();
      it = vertex[v].getValue();
    }
    if (it != null)
      return it.vertex();
    return Mark.length; // No neighbor
  }
