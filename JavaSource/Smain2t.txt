
public static void main(String args[]) throws IOException {
  Assert.notFalse(args.length >= 1,
	  "Usage: Sortmain [+/-] <size> <threshold>");

  int i;
  int input = 0;
  int currarg = 0;
  if (args[currarg].charAt(0) == '+') { input = 1; currarg++; }
  else if (args[currarg].charAt(0) == '-') { input = -1; currarg++; }

  int TRIALSIZE = Integer.parseInt(args[currarg++]);
  if (args.length > currarg)
	THRESHOLD = Integer.parseInt(args[currarg]);


  Elem[] array = new Elem[ARRAYSIZE];

  System.out.println("Input: " + input +
          ", size: " + TRIALSIZE + " (" + ARRAYSIZE/TRIALSIZE +
          " times), threshold: " + THRESHOLD);

  if (input == -1)
    for (i=0; i<ARRAYSIZE; i++)
      array[i] = new IElem(ARRAYSIZE - i);  // Reverse sorted
  else if (input == 0)
    for (i=0; i<ARRAYSIZE; i++)
      array[i] = new IElem(DSutil.random(30000));  // Random
  else
    for (i=0; i<ARRAYSIZE; i++)
      array[i] = new IElem(i);              // Sorted

long time1 = System.currentTimeMillis();
  for (i=0; i+TRIALSIZE <= ARRAYSIZE; i+=TRIALSIZE)
    sort(array, i, TRIALSIZE);
long time2 = System.currentTimeMillis();
System.out.println("Time is " + (time2-time1));

  System.out.println("Done sorting");

  for (int start=0; start+TRIALSIZE <= ARRAYSIZE; start+=TRIALSIZE)
    for (i=start+1; i<start+TRIALSIZE; i++)
      if (array[i].key() < array[i-1].key()) {
        System.out.println("OOPS -- bad sort algorithm!");
          for (int j=start; j<start+TRIALSIZE; j++)
            System.out.print(array[j] + " ");
        System.out.println();
        break;
      }
  System.out.println("Sorting checked out OK.");

//  System.in.read();
}

}
