/** Recursive topological sort */
static void topsort(Graph G) {
  for (int i=0; i<G.n(); i++)  // Initialize Mark array
    G.setMark(i, UNVISITED);
  for (int i=0; i<G.n(); i++)  // Process all vertices
    if (G.getMark(i) == UNVISITED)
      tophelp(G, i);           // Recursive helper function
}

/** Topsort helper function */
static void tophelp(Graph G, int v) {
  G.setMark(v, VISITED);
  for (int w = G.first(v); w < G.n(); w = G.next(v, w))
    if (G.getMark(w) == UNVISITED)
      tophelp(G, w);
  printout(v);                 // PostVisit for Vertex v
}
